@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>Details</title>
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/cv.css")">
</head>
<body>
    <div class="container">
        <h1 class="name">Ignacio Andrés Fuentes</h1>
        <div class="row">
            <h1 class="heading">Basic Info</h1>
            <table>
                <tr>
                    <td>Place of Birth</td>
                    <td><span class="colon">:</span>Caracas, Venezuela</td>
                </tr>
                <tr>
                    <td>Language</td>
                    <td><span class="colon">:</span>Spanish (native), English</td>
                </tr>
                <tr>
                    <td>Address</td>
                    <td><span class="colon">:</span>Urb. Oripoto, calle Caripe, qta. Neblina, Caracas, Venezuela.
                    </td>
                </tr>
                <tr>
                    <td>Home-Phone</td>
                    <td><span class="colon">:</span>+582129612773</td>
                </tr>
                <tr>
                    <td>Mobile-Phone</td>
                    <td><span class="colon">:</span>+584141735611</td>
                </tr>
                <tr>
                    <td>E-Mail</td>
                    <td><span class="colon">:</span>nacho10f@gmail.com</td>
                </tr>
            </table>
        </div>
        <div class="row">
            <h1 class="heading">Experience</h1>
            <div class="experience-item">
                <p class="company">
                    Viitru
                </p>
                <p>
                    Caracas, Miranda. Venezuela.<span class="timeframe">April 2011-Present</span>
                </p>
                <p>Software Architect</p>
                <p>
                    It is my responsibility to do the necessary research (followed by training my coworkers)
                    on the technologies we use to build our application. As a software architect I made
                    the important choices of developing using the Microsoft stack with the addition
                    of many open source .net products. Specifically, ASP.NET MVC and WEB API, MS SQL
                    Server, Entity Framework, Automapper, Ninject, Nuget, jquery, KnockoutJS, Twitter
                    Bootstrap and Appharbor. I am also responsible of structuring our app (solution)
                    in a way that we can keep a sane separation of concerns without losing focus on
                    the importance of shipping our product in a timely fashion.
                </p>
            </div>
            <div class="experience-item">
                <p class="company">
                    TuColegionline
                </p>
                <p>
                    Caracas, Miranda. Venezuela.<span class="timeframe">March 2010 – April 2011</span>
                </p>
                <p>Co-Founder/Developer</p>
                <p>
                    A partner and I co-founded TuColegionline.com which is a school management system
                    targeting Venezuelan schools. My role was to build the software from a backend perspective.
                    We developed it using Ruby on Rails and many ruby oriented open source projects.
                    This company has now been renamed to Akdemia since my leaving.
                </p>
            </div>
            <div class="experience-item">
                <p class="company">
                    Ramar Consultores
                </p>
                <p>
                    Caracas, Miranda. Venezuela.<span class="timeframe">May 2009 – Septemeber 2009</span>
                </p>
                <p>Software Analyst</p>
                <p>
                    This was an internship position. I developed a mobile project management web application
                    for a client that needed a custom solution to keep track of many construction projects.
                    This web application was developed using PHP and the CodeIgniter MVC framework.
                </p>
            </div>
        </div>
        <div class="row">
            <h2 class="heading">Education</h2>
            <table>
                <tr>
                    <td>University</td>
                    <td><span class="colon">:</span>Systems Engineering. Universidad Metropolitana (2005-2011),
                        Caracas, Venezuela.
                    </td>
                </tr>

            </table>
        </div>

        <div class="row">
            <h2 class="heading">Skills, Qualifications and Design Patterns</h2>
            <p>
                In web software development it is paramount to keep track of several types of technologies
                to actually be able to build complete and compelling software. This includes both
                front-end and back-end technologies. Throughout the last few years, I have developed
                experience with a myriad of .Net back-end technologies such as ASP.NET MVC, ASP.NET
                WEB API (Rest, HTTP), C#, Entity Framework, Linq-To-Sql, SQL Server 2008, AutoMapper,
                Ninject, MSTest, NUnit and Specflow. I have also had the chance to work with several
                open source back-end technologies like Ruby-On-Rails, Active Record, RSpec, Cucumber,
                PHP, CodeIgniter, MySQL and PostgreSQL. Added to this, I have developed moderate
                experience using several front-end technologies, including but not limited to HTML5,
                Javascript, CSS, jQuery, Knockout.JS, Backbone.JS, JSRender, Twitter Bootsrap and
                jQuery UI.
            </p>
            <p>
                For backend development I try to keep a clean separation of concerns using (whenever
                is prudent) a Domain Driven Design (using Eric Evans book as reference) along with
                MVC (Restful if possible) as a delivery mechanism. I like to build software using
                TDD and BDD, making sure my tests have good code coverage.
            </p>
            <p>
                For front-end development I favor clean HTML markup with unobtrusive javascript.
                For complex UIs I tend to follow the MVVM (Model-View-ViewModel) pattern recommended
                by the Knockout.JS Javascript framework, with the addition of following a Revealing
                Module Pattern to structure my code.
            </p>
            <p>
                For collaborative development environments I have experience with Git, Github, SCRUM
                and PivotalTracker.
            </p>
        </div>
    </div>
</body>
</html>
